https://codepen.io/BobsPen/pen/QgXJmB

let wave = function(x, y, t, amp)
{
	const p1 = 0.8   * (x + y) + t,
			p2 = 0.6   * (x - y) - t,
			p3 = 0.002 * (x*x - y*y) - t,
			a1 = 0.25  * Math.cos(p1 / 20),
			a2 = 0.125 * Math.cos(p2 / 20),
			a3 = 1.0   * Math.cos(p3 / 100);
	
	return amp * (a1 + a2 + a3);
};


let projection = function()
{
	const sx = 0,    sy = 0, sz = 100,
			cx = 6000, cy = 0, cz = 2000;
	
	return function(x, y, z) {
		const k = (sx - x) / (cx - x),
				px = k * (cy - y) + y - sy,
				py = k * (cz - z) + z - sz;
		
		return [px, py];
	}
}();


let draw = function()
{
	const canvas = document.querySelector('canvas'),
			ctx = canvas.getContext('2d'),
			length    = 1000,
			width     = 600,
			amplitude = 80 / 2,
			half_w = canvas.width  / 2,
			half_h = canvas.height / 2,
			start_y  = -width / 2,
			end_y    =  width / 2,
			start_x  = -length / 2,
			end_x    =  length / 2,
			step = 8;

	let time = 0, 
		 px, py,
		 x, y, z,
		 xmin = -half_h;
	
	ctx.transform(1, 0, 0, -1, half_w, half_h);
	ctx.fillStyle = 'hsl(220, 60%, 60%)';
	
	return function()
	{
		ctx.clearRect(-half_w, -half_h, canvas.width, canvas.height);
		
		xmin = -half_h;
		for(y = start_y; y <= end_y; y += step)
		{
			for(x = end_x; x >= start_x; x -= step)
			{
				z = wave(x, y, time, amplitude);
				[px, py] = projection(x, y, z);
				if(py > xmin) {
					ctx.fillRect(px, py, 1.3, 1.3);
					xmin = py;
				}
			}
			xmin = -half_h;
		}
		
		time += 1;
		requestAnimationFrame(draw);
	};
	
}();

draw();